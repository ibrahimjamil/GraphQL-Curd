{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/GraphQL-Crud/Node-React-Apollo-GraphQL/frontend/src/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { CREATE_USER_MUTATION } from \"./GraphQL/Mutations\";\nimport { useMutation } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form(_ref) {\n  _s();\n\n  let {\n    style\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [createUser] = useMutation(CREATE_USER_MUTATION);\n\n  const addUser = async () => {\n    await createUser({\n      variables: {\n        name: name,\n        email: email\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Name\",\n      variant: \"outlined\",\n      value: name,\n      onChange: e => {\n        setName(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Email\",\n      variant: \"outlined\",\n      value: email,\n      onChange: e => {\n        setEmail(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contanied\",\n      onClick: addUser,\n      children: \"Add User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"NidFfzJD2Ikl/PDH9oX3IKPl79g=\", false, function () {\n  return [useMutation];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/mac/Desktop/GraphQL-Crud/Node-React-Apollo-GraphQL/frontend/src/Form.js"],"names":["React","useState","CREATE_USER_MUTATION","useMutation","Form","style","name","setName","email","setEmail","createUser","addUser","variables","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,oBAAT,QAAoC,qBAApC;AACA,SAASC,WAAT,QAA4B,gBAA5B;;;AAEA,SAASC,IAAT,OAAuB;AAAA;;AAAA,MAAT;AAACC,IAAAA;AAAD,GAAS;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,UAAD,IAAeP,WAAW,CAACD,oBAAD,CAAhC;;AAEA,QAAMS,OAAO,GAAG,YAAY;AAC1B,UAAMD,UAAU,CAAC;AACfE,MAAAA,SAAS,EAAE;AACTN,QAAAA,IAAI,EAAEA,IADG;AAETE,QAAAA,KAAK,EAAEA;AAFE;AADI,KAAD,CAAhB;AAMD,GAPD;;AASA,sBACE;AAAK,IAAA,KAAK,EAAEH,KAAZ;AAAA,4BACE,QAAC,SAAD;AACI,MAAA,KAAK,EAAC,MADV;AAEI,MAAA,OAAO,EAAC,UAFZ;AAGI,MAAA,KAAK,EAAEC,IAHX;AAII,MAAA,QAAQ,EAAGO,CAAD,IAAO;AACfN,QAAAA,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD;AANL;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,SAAD;AACI,MAAA,KAAK,EAAC,OADV;AAEI,MAAA,OAAO,EAAC,UAFZ;AAGI,MAAA,KAAK,EAAEP,KAHX;AAII,MAAA,QAAQ,EAAGK,CAAD,IAAO;AACfJ,QAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD;AANL;AAAA;AAAA;AAAA;AAAA,YATF,eAiBE,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,OAAO,EAAEJ,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAxCQP,I;UAGcD,W;;;KAHdC,I;AAyCT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { CREATE_USER_MUTATION} from \"./GraphQL/Mutations\";\nimport { useMutation } from \"@apollo/client\";\n\nfunction Form({style}) {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [createUser] = useMutation(CREATE_USER_MUTATION);\n\n  const addUser = async () => {\n    await createUser({\n      variables: {\n        name: name,\n        email: email,\n      },\n    });\n  }\n\n  return (\n    <div style={style}>\n      <TextField \n          label=\"Name\" \n          variant=\"outlined\" \n          value={name}\n          onChange={(e) => {\n            setName(e.target.value);\n          }}\n      />\n      <TextField \n          label=\"Email\" \n          variant=\"outlined\" \n          value={email}\n          onChange={(e) => {\n            setEmail(e.target.value);\n          }}\n      />\n      <Button\n        variant=\"contanied\"\n        onClick={addUser}\n      >\n        Add User\n      </Button>\n    </div>\n  );\n}\nexport default Form;"]},"metadata":{},"sourceType":"module"}