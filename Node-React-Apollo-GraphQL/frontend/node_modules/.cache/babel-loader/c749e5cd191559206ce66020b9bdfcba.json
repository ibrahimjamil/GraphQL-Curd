{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/GraphQL-Crud/Node-React-Apollo-GraphQL/frontend/src/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useQuery } from \"@apollo/client\";\nimport { LOAD_USERS } from './GraphQL/Queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = _ref => {\n  _s();\n\n  let {\n    style\n  } = _ref;\n  const {\n    data\n  } = useQuery(LOAD_USERS);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    if (data) {\n      setUsers(data.getAllUsers);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"#FE6B8B\"\n        },\n        children: \"showing list of users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }, this), users.map((val, index) => {\n        return /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [index, \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 31\n          }, this), \" \", val.firstName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 26\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(List, \"fo1n5q4kaFG/qgC2c/0qVX6UU84=\", false, function () {\n  return [useQuery];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/mac/Desktop/GraphQL-Crud/Node-React-Apollo-GraphQL/frontend/src/List.js"],"names":["React","useState","useEffect","useQuery","LOAD_USERS","List","style","data","users","setUsers","getAllUsers","display","flexDirection","alignItems","color","map","val","index","firstName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,UAAT,QAA2B,mBAA3B;;;AAGA,MAAMC,IAAI,GAAG,QAAa;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,QAAQ,CAACC,UAAD,CAAzB;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,IAAJ,EAAU;AACRE,MAAAA,QAAQ,CAACF,IAAI,CAACG,WAAN,CAAR;AACD;AACF,GAJM,EAIJ,CAACH,IAAD,CAJI,CAAT;AAKA,sBACI;AAAK,IAAA,KAAK,EAAED,KAAZ;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE;AACNK,QAAAA,OAAO,EAAC,MADF;AAENC,QAAAA,aAAa,EAAC,QAFR;AAGNC,QAAAA,UAAU,EAAC;AAHL,OAAZ;AAAA,8BAMI;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAC;AADD,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,EAYKN,KAAK,CAACO,GAAN,CAAU,CAACC,GAAD,EAAKC,KAAL,KAAe;AACtB,4BAAO;AAAA,uCAAK;AAAA,uBAAOA,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAL,OAA4BD,GAAG,CAACE,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA,CAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CA5BD;;GAAMb,I;UACeF,Q;;;KADfE,I;AA8BN,eAAeA,IAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { LOAD_USERS } from './GraphQL/Queries';\n\n\nconst List = ({style}) => {\n    const { data } = useQuery(LOAD_USERS);\n    const [users, setUsers] = useState([]);\n    useEffect(() => {\n        if (data) {\n          setUsers(data.getAllUsers);\n        }\n      }, [data]);\n    return (\n        <div style={style}>\n          <div style={{\n                display:\"flex\",\n                flexDirection:\"column\",\n                alignItems:\"center\"\n              }}\n            >\n              <h1 \n                style={{\n                  color:\"#FE6B8B\"\n                }}>\n                showing list of users\n              </h1>\n              {users.map((val,index) => {\n                  return <h4> <span>{index}.</span> {val.firstName}</h4>;\n              })}\n          </div>\n        </div>\n    )\n}\n\nexport default List\n"]},"metadata":{},"sourceType":"module"}