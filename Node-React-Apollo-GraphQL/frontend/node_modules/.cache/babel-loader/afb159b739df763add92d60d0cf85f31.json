{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/GraphQL-Crud/Node-React-Apollo-GraphQL/frontend/src/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Tooltip from '@mui/material/Tooltip';\nimport { Button, Dialog, Grid } from '@material-ui/core';\nimport { makeStyles } from '@mui/styles';\nimport { useQuery } from \"@apollo/client\";\nimport { LOAD_USERS } from './GraphQL/Queries';\nimport TextField from '@mui/material/TextField';\nimport Alert from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\nimport { CREATE_USER_MUTATION } from './GraphQL/Mutations';\nimport { useMutation } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    \"&:hover\": {\n      cursor: \"pointer\"\n    }\n  },\n  dialog: {\n    minHeight: \"40vh\",\n    padding: 10\n  },\n  button: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white !important',\n    height: 48,\n    padding: '0 30px'\n  }\n});\n\nconst List = _ref => {\n  _s();\n\n  let {\n    style,\n    fetching,\n    updateFetching\n  } = _ref;\n  const classes = useStyles();\n  const {\n    data,\n    refetch\n  } = useQuery(LOAD_USERS);\n  const [updateUser] = useMutation(CREATE_USER_MUTATION);\n  const [editModel, setEditModelOpen] = useState(false);\n  const [userIndex, setUserIndex] = useState(null);\n  const [alert, setAlert] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  useEffect(() => {\n    if (data) {\n      setUsers(data.getAllUsers);\n    }\n  }, [data]);\n  useEffect(() => {\n    refetch();\n    updateFetching(false);\n  }, [fetching]);\n\n  const updUser = async () => {\n    await updateUser({\n      variables: {\n        id: userIndex,\n        name: name,\n        email: email\n      }\n    });\n    setName('');\n    setEmail('');\n    refetch();\n    setEditModelOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"#FE6B8B\"\n        },\n        children: \"Read list of users detail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }, this), !!users && users.map((val, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              textAlign: \"center\",\n              position: \"relative\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"#FE6B8B\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(FiberManualRecordIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 27\n              }, this), \" \\xA0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this), \"id :\", val._id, \" name: \", val.name, \" and email: \", val.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: \"auto 30px\",\n              display: \"flex\",\n              flexDirection: \"row\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Update\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.root,\n                onClick: () => {\n                  setUserIndex(val._id);\n                  setEditModelOpen(true);\n                },\n                children: /*#__PURE__*/_jsxDEV(EditOutlinedIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Delete\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.root,\n                onClick: () => setAlert(true),\n                children: /*#__PURE__*/_jsxDEV(DeleteOutlineOutlinedIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this), !!editModel && /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        classes: {\n          paper: classes.dialog\n        },\n        open: editModel,\n        onClose: () => setEditModelOpen(false),\n        maxWidth: 'md',\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            width: \"50%\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            textAlign: \"center\",\n            color: \"#FE6B8B\"\n          },\n          children: [\"Update User \", userIndex]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            marginBottom: \"10px\",\n            textJustify: \"auto\",\n            width: \"50%\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n          },\n          label: \"Name\",\n          variant: \"outlined\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          style: {\n            marginBottom: \"10px\",\n            width: \"50%\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n          },\n          variant: \"outlined\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Close\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              classes: {\n                root: classes.button\n              },\n              style: {\n                width: \"25%\",\n                marginRight: \"5px\"\n              },\n              onClick: () => setEditModelOpen(false),\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Update\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              classes: {\n                root: classes.button\n              },\n              style: {\n                width: \"25%\"\n              },\n              onClick: updUser,\n              children: \"Update User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), !!alert && /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: alert,\n      autoHideDuration: 2000,\n      onClose: () => setAlert(false),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        children: \"User record has been deleted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(List, \"hyeyplrLltVGFMA3Xht+KiN4oS8=\", false, function () {\n  return [useStyles, useQuery, useMutation];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/mac/Desktop/GraphQL-Crud/Node-React-Apollo-GraphQL/frontend/src/List.js"],"names":["React","useState","useEffect","Tooltip","Button","Dialog","Grid","makeStyles","useQuery","LOAD_USERS","TextField","Alert","Snackbar","DeleteOutlineOutlinedIcon","EditOutlinedIcon","FiberManualRecordIcon","CREATE_USER_MUTATION","useMutation","useStyles","root","cursor","dialog","minHeight","padding","button","background","border","borderRadius","boxShadow","color","height","List","style","fetching","updateFetching","classes","data","refetch","updateUser","editModel","setEditModelOpen","userIndex","setUserIndex","alert","setAlert","users","setUsers","name","setName","email","setEmail","getAllUsers","updUser","variables","id","display","flexDirection","alignItems","map","val","index","textAlign","position","_id","margin","paper","width","marginLeft","marginRight","marginBottom","textJustify","e","target","value","justifyContent"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport Tooltip from '@mui/material/Tooltip';\nimport { Button, Dialog, Grid } from '@material-ui/core'\nimport { makeStyles } from '@mui/styles';\nimport { useQuery } from \"@apollo/client\";\nimport { LOAD_USERS } from './GraphQL/Queries';\nimport TextField from '@mui/material/TextField';\nimport Alert from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\nimport {CREATE_USER_MUTATION} from './GraphQL/Mutations'\nimport { useMutation } from \"@apollo/client\";\n\nconst useStyles = makeStyles({\n  root: {\n    \"&:hover\":{\n      cursor:\"pointer\"\n    }\n  },\n  dialog:{\n    minHeight: \"40vh\",\n    padding: 10,\n  },\n  button:{\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white !important',\n    height: 48,\n    padding: '0 30px',\n  }\n});\n\nconst List = ({style,fetching,updateFetching}) => {\n    const classes = useStyles();\n    const { data , refetch} = useQuery(LOAD_USERS);\n    const [updateUser] = useMutation(CREATE_USER_MUTATION);\n    const [editModel,setEditModelOpen] = useState(false)\n    const [userIndex,setUserIndex] = useState(null)\n    const [alert,setAlert] = useState(false)\n    const [users, setUsers] = useState([]);\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n\n    useEffect(() => {\n        if (data) {\n          setUsers(data.getAllUsers);\n        }\n      }, [data]);\n    \n    useEffect(()=>{\n      refetch()\n      updateFetching(false)\n    },[fetching])\n\n    const updUser = async () => {\n      await updateUser({\n        variables: {\n          id: userIndex,\n          name: name,\n          email: email,\n        },\n      });\n      setName('')\n      setEmail('')\n      refetch()\n      setEditModelOpen(false)\n    }\n    return (\n        <div style={style}>\n          <div style={{\n                display:\"flex\",\n                flexDirection:\"column\",\n                alignItems:\"center\"\n              }}\n            >\n              <h1 \n                style={{\n                  color:\"#FE6B8B\"\n                }}>\n                Read list of users detail \n              </h1>\n              {!!users && users.map((val,index) => {\n                  return (\n                    <div \n                      style={{\n                        display:\"flex\",\n                        flexDirection:\"row\"\n                      }}\n                    >\n                      <h4 style={{textAlign:\"center\",position:\"relative\"}}> \n                        <span \n                          style={{\n                            color:\"#FE6B8B\"\n                          }}>\n                          <FiberManualRecordIcon/> &nbsp;   \n                        </span> \n                          id :{val._id} name: {val.name} and email: {val.email}\n                      </h4>\n                      <div style={{margin:\"auto 30px\", display:\"flex\",flexDirection:\"row\"}}>\n                          <Tooltip title=\"Update\">\n                            <div className={classes.root} onClick={()=>{\n                                  setUserIndex(val._id)\n                                  setEditModelOpen(true)\n                                }}>\n                                <EditOutlinedIcon/>\n                            </div>\n                          </Tooltip>\n                          <Tooltip title=\"Delete\">\n                            <div className={classes.root} onClick={()=>setAlert(true)}>\n                                <DeleteOutlineOutlinedIcon/>\n                            </div>\n                          </Tooltip>\n                      </div>\n                    </div>\n                  )\n              })}\n          </div>\n          {!!editModel && (\n            <Grid container direction={\"column\"} alignItems={\"center\"}>\n              <Dialog\n                  classes={{ paper: classes.dialog }}\n                  open={editModel}\n                  onClose={()=>setEditModelOpen(false)}\n                  maxWidth={'md'}\n                  fullWidth={true} \n              >\n                  <h2 style={{\n                    width:\"50%\",\n                    marginLeft:\"auto\",\n                    marginRight:\"auto\",\n                    textAlign:\"center\",\n                    color:\"#FE6B8B\"\n                  }}>\n                    Update User {userIndex}\n                  </h2>\n                  <TextField \n                    style={{\n                      marginBottom:\"10px\",\n                      textJustify:\"auto\",\n                      width:\"50%\",\n                      marginLeft:\"auto\",\n                      marginRight:\"auto\"\n                    }}\n                    label=\"Name\" \n                    variant=\"outlined\" \n                    value={name}\n                    onChange={(e)=>setName(e.target.value)}\n                />\n                <TextField \n                    label=\"Email\"\n                    style={{\n                      marginBottom:\"10px\",\n                      width:\"50%\",\n                      marginLeft:\"auto\",\n                      marginRight:\"auto\"\n                    }} \n                    variant=\"outlined\" \n                    value={email}\n                    onChange={(e)=>setEmail(e.target.value)}\n                />\n                <div \n                  style={{\n                    display:\"flex\",\n                    flexDirection:\"row\",\n                    justifyContent:\"center\"\n                  }}\n                >\n                  <Tooltip title=\"Close\">\n                    <Button\n                      classes={{\n                          root:classes.button\n                        }}\n                      style={{\n                        width:\"25%\",\n                        marginRight:\"5px\"\n                      }}\n                      onClick={()=>setEditModelOpen(false)}\n                    >\n                      Close\n                    </Button>\n                  </Tooltip>\n                  <Tooltip title=\"Update\">\n                    <Button\n                      classes={{\n                          root:classes.button\n                        }}\n                      style={{\n                        width:\"25%\",\n                      }}\n                      onClick={updUser}\n                    >\n                      Update User\n                    </Button>\n                  </Tooltip>\n                </div>\n              </Dialog>\n            </Grid>\n          )}\n          {!!alert && (\n            <Snackbar open={alert} autoHideDuration={2000} onClose={()=>setAlert(false)}>\n              <Alert severity=\"success\" sx={{ width: '100%' }}>\n                User record has been deleted\n              </Alert>\n            </Snackbar>\n          )}\n        </div>\n    )\n}\n\nexport default List\n"]},"metadata":{},"sourceType":"module"}